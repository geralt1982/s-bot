"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Telegram Gifts Monitor Bot
–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
"""

import os
import logging
from pathlib import Path

# –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram API
SESSION_NAME = os.getenv("SESSION_NAME", "gifts_monitor")
API_ID = int(os.getenv("API_ID", "0"))
API_HASH = os.getenv("API_HASH", "")

# –¢–æ–∫–µ–Ω—ã –±–æ—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
BOT_TOKENS = [
    token.strip() 
    for token in os.getenv("BOT_TOKENS", "").split(",") 
    if token.strip()
]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
CHECK_INTERVAL = float(os.getenv("CHECK_INTERVAL", "10.0"))  # —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
CHECK_UPGRADES_PER_CYCLE = float(os.getenv("CHECK_UPGRADES_PER_CYCLE", "30.0"))  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–ø–≥—Ä–µ–π–¥–æ–≤

# –ß–∞—Ç—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
NOTIFY_CHAT_ID = int(os.getenv("NOTIFY_CHAT_ID", "0"))  # –í–∞—à chat_id
NOTIFY_UPGRADES_CHAT_ID = int(os.getenv("NOTIFY_UPGRADES_CHAT_ID", "0")) if os.getenv("NOTIFY_UPGRADES_CHAT_ID") else None

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
MAX_NOTIFICATIONS = int(os.getenv("MAX_NOTIFICATIONS", "50"))  # –º–∞–∫—Å–∏–º—É–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
NOTIFICATION_INTERVAL = float(os.getenv("NOTIFICATION_INTERVAL", "5.0"))  # —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
NOTIFY_AFTER_STICKER_DELAY = float(os.getenv("NOTIFY_AFTER_STICKER_DELAY", "2.0"))
NOTIFY_AFTER_TEXT_DELAY = float(os.getenv("NOTIFY_AFTER_TEXT_DELAY", "3.0"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏ –ª–æ–≥–æ–≤
WORK_DIRPATH = Path(__file__).parent
DATA_FILEPATH = WORK_DIRPATH / "star_gifts.json"
DATA_SAVER_DELAY = float(os.getenv("DATA_SAVER_DELAY", "5.0"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
CONSOLE_LOG_LEVEL = logging.INFO
FILE_LOG_LEVEL = logging.INFO
TIMEZONE = os.getenv("TIMEZONE", "UTC")

# HTTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
HTTP_REQUEST_TIMEOUT = float(os.getenv("HTTP_REQUEST_TIMEOUT", "30.0"))

# –¢–µ–∫—Å—Ç—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
NOTIFY_TEXT = """
üö® {title} üö®

‚Ññ {number} (ID: <code>{id}</code>)
{total_amount}{available_amount}{sold_out}
üíé –¶–µ–Ω–∞: {price} ‚≠êÔ∏è
‚ôªÔ∏è –¶–µ–Ω–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {convert_price} ‚≠êÔ∏è

‚è∞ –î–ï–ô–°–¢–í–£–ô –ë–´–°–¢–†–û!
"""

NOTIFY_TEXT_TITLES = {
    True: "üî• –ù–û–í–´–ô –õ–ò–ú–ò–¢–ò–†–û–í–ê–ù–ù–´–ô –ü–û–î–ê–†–û–ö",
    False: "‚ùÑÔ∏è –ù–û–í–´–ô –ü–û–î–ê–†–û–ö"
}

NOTIFY_TEXT_TOTAL_AMOUNT = "\nüéØ –í—Å–µ–≥–æ: {total_amount}"
NOTIFY_TEXT_AVAILABLE_AMOUNT = "\n‚ùì –î–æ—Å—Ç—É–ø–Ω–æ: {available_amount} ({same_str}{available_percentage}%, –æ–±–Ω–æ–≤–ª–µ–Ω–æ {updated_datetime})\n"
NOTIFY_TEXT_SOLD_OUT = "\n‚è∞ –†–∞—Å–ø—Ä–æ–¥–∞–Ω–æ –∑–∞ {sold_out}\n"

NOTIFY_UPGRADES_TEXT = "üéÅ –ü–æ–¥–∞—Ä–æ–∫ –º–æ–∂–Ω–æ –∞–ø–≥—Ä–µ–π–¥–∏—Ç—å! (ID: <code>{id}</code>)"

# –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
def validate_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    errors = []
    
    if not API_ID or API_ID == 0:
        errors.append("API_ID –Ω–µ –∑–∞–¥–∞–Ω")
    
    if not API_HASH:
        errors.append("API_HASH –Ω–µ –∑–∞–¥–∞–Ω")
    
    if not BOT_TOKENS:
        errors.append("BOT_TOKENS –Ω–µ –∑–∞–¥–∞–Ω—ã")
    
    if not NOTIFY_CHAT_ID or NOTIFY_CHAT_ID == 0:
        errors.append("NOTIFY_CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω")
    
    if errors:
        raise ValueError(f"–û—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {', '.join(errors)}")
    
    return True

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
if __name__ != "__main__":
    try:
        validate_config()
    except ValueError as e:
        print(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {e}")